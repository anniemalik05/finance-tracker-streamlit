{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"mount_file_id":"1ldQ4o4Y5-3RIT7_2tDeVuEqreM95FPwJ","authorship_tag":"ABX9TyOD6L/Fi8Mo3Xq4iUSAyFpW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cxV4ZWszwFRm","executionInfo":{"status":"ok","timestamp":1752843987384,"user_tz":-300,"elapsed":91,"user":{"displayName":"Qurratulain Malik","userId":"10703888394334522913"}},"outputId":"aae47333-1b52-470a-8dbe-469f56c13c18"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Project packaged into 'finance_tracker_project.zip' successfully.\n"]}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","import numpy as np\n","import os\n","import zipfile\n","\n","# Create sample transaction data\n","data = {\n","    'Date': pd.date_range(start='2023-09-01', periods=20, freq='D'),\n","    'Description': [\n","        'Grocery Store', 'Electricity Bill', 'Movie Tickets', 'Restaurant', 'Gas Station',\n","        'Online Shopping', 'Water Bill', 'Gym Membership', 'Coffee Shop', 'Pharmacy',\n","        'Supermarket', 'Internet Bill', 'Concert', 'Fast Food', 'Fuel Refill',\n","        'Clothing Store', 'Mobile Recharge', 'Bookstore', 'Streaming Service', 'Taxi Ride'\n","    ],\n","    'Amount': [\n","        120, 60, 45, 80, 50,\n","        150, 40, 55, 15, 30,\n","        110, 70, 90, 25, 45,\n","        130, 35, 40, 20, 50\n","    ]\n","}\n","df = pd.DataFrame(data)\n","\n","# Categorize transactions\n","def categorize(description):\n","    categories = {\n","        'Groceries': ['grocery', 'supermarket'],\n","        'Utilities': ['electricity', 'water', 'internet', 'mobile'],\n","        'Entertainment': ['movie', 'concert', 'streaming'],\n","        'Dining': ['restaurant', 'coffee', 'fast food'],\n","        'Transport': ['gas', 'fuel', 'taxi'],\n","        'Shopping': ['shopping', 'clothing', 'bookstore'],\n","        'Health': ['pharmacy', 'gym']\n","    }\n","    description = description.lower()\n","    for category, keywords in categories.items():\n","        if any(keyword in description for keyword in keywords):\n","            return category\n","    return 'Other'\n","\n","df['Category'] = df['Description'].apply(categorize)\n","\n","# Budget tracking\n","total_spent = df['Amount'].sum()\n","budget_limit = 1000\n","budget_status = \"✅ Within Budget\" if total_spent <= budget_limit else \"⚠️ Budget Exceeded\"\n","\n","# Visualization 1: Spending by Category\n","category_totals = df.groupby('Category')['Amount'].sum()\n","plt.figure(figsize=(8, 6))\n","category_totals.plot(kind='pie', autopct='%1.1f%%', startangle=140)\n","plt.title('Spending by Category')\n","plt.ylabel('')\n","plt.tight_layout()\n","plt.savefig('spending_by_category.png')\n","plt.close()\n","\n","# Visualization 2: Expense Trend and Prediction\n","df['Day'] = np.arange(len(df))\n","X = df[['Day']]\n","y = df['Amount']\n","model = LinearRegression().fit(X, y)\n","future_days = np.arange(len(df), len(df) + 4).reshape(-1, 1)\n","predicted_expenses = model.predict(future_days)\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(df['Date'], df['Amount'], label='Actual Expenses')\n","future_dates = pd.date_range(start=df['Date'].iloc[-1] + pd.Timedelta(days=1), periods=4)\n","plt.plot(future_dates, predicted_expenses, label='Predicted Expenses', linestyle='--')\n","plt.xlabel('Date')\n","plt.ylabel('Amount')\n","plt.title('Expense Trend and Prediction')\n","plt.legend()\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.savefig('expense_prediction.png')\n","plt.close()\n","\n","# Save data to CSV\n","df.to_csv('transaction_data.csv', index=False)\n","\n","# Save summary to text file\n","with open('summary.txt', 'w', encoding='utf-8') as f:\n","    f.write(\"AI-powered Personal Finance Tracker Summary\\n\")\n","    f.write(\"==========================================\\n\")\n","    f.write(f\"Total Spent: ${total_spent:.2f}\\n\")\n","    f.write(f\"Budget Limit: ${budget_limit}\\n\")\n","    f.write(f\"Status: {budget_status}\\n\")\n","\n","# Create ZIP file\n","with zipfile.ZipFile('finance_tracker_project.zip', 'w') as zipf:\n","    zipf.write('transaction_data.csv')\n","    zipf.write('spending_by_category.png')\n","    zipf.write('expense_prediction.png')\n","    zipf.write('summary.txt')\n","print(\"Project packaged into 'finance_tracker_project.zip' successfully.\")"]}]}